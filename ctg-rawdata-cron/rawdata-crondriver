#!/bin/bash

echo " ==== RAWDATA DELIVER - for CRON ====" 

# sync data to lfs603 customer folder 
# generates email and sends to customer
usage() {
    echo "Usage: ctg-deliver -u CTG-USER-LFS -d DATA-TO-DELIVER"  1>&2 
    echo ""
    echo ""
    echo "needs ctg-delivery.info.csv in delivery folder (-d DATA-TO-DELIVER) of the format:"
    echo "projid,<PROJID>"
    echo "email,<customer email adress>"
    echo "cc,<emails for cc (only internal CTG emails allowed)>,"
    echo "autodeliver,<y if send delivery email to customer, n if just transfer to lfs (and send email to ctg-bnf'er)>"
}

exit_abnormal() {
    usage
    exit 1
}

while getopts u:d:m:i:p: opt; do
    case $opt in
	u) ctguser="$OPTARG"
	   ;;
	d) data="$OPTARG"
	    ;;
	\?) echo "> Error: Invalid option -$OPTARG" >&2
	    exit_abnormal ;;
	:) echo "> Error: -${OPTARG} requires an argument!" 
	    exit_abnormal ;;
    esac
done

shift "$(( OPTIND -1 ))"

if [ -z $ctguser ]; then
    echo "> Error: missing -u CTG-USER-LFS!"
    exit_abnormal
fi
if [ -z $data ]; then
    echo "> Error: missing -d DATA-TO-DELIVER!"
    exit_abnormal
fi 


# Set full path on lsens4 upload ($fullpath) 
fullpath=$data
# Set only runfolder ($data)
tmp=$(basename $data)
data=$tmp
# Set root upload ($nasup)
nasup="/projects/fs1/nas-sync/upload/"

# rawdata: then 'CTG_SampleSheet.rawdata.csv' should be used
rawinfo="$nasup/$data/CTG_SampleSheet.rawdata.csv"

# Generate pswd
pswd=$(sh /projects/fs1/shared/ctg-tools/bin/ctg-password-generator.sh)

# set runfolder :
if [ -f $rawinfo ]; then
    echo "> '$(basename $rawinfo)' identified in $data folder: "
    echo " ---> Rawdata delivery"
    email=$(grep "email," $rawinfo | cut -f2 -d"," | tr -d '\n\r' | sed "s/;/ /g")
    pid=$(grep "projid," $rawinfo | cut -f2 -d"," | tr -d '\n\r')
    pipe="rawdata"
    autodeliver=$(grep "autodeliver," $rawinfo | cut -f2 -d"," | tr -d '\n\r') # 
else
    echo ">Error: CTG_SampleSheet.rawdata.csv found in $data folder! "
    exit_abnormal
fi

## get email adresses to CC in mail
cc=$(grep "cc," $rawinfo | cut -f2 -d"," | tr -d '\n\r' | sed "s/;/ /g")

# If customer not set from cmd argument, set project id as customer
customer="ctg_${pid}"
# Set target folder 
lfstarget="/srv/data/$customer/$data"
# Delivery template for current pipeline
emailtemplate="/projects/fs1/shared/ctg-pipelines/ctg-${pipe}/ctg-delivery-mail/ctg-delivery-mail_${pipe}.csv"

# Check if template for this pipeline exists
if [ ! -f $emailtemplate ]; then
    echo "> Error: template email for pipeline $pipe ($emailtemplate) does NOT exist. Please add (or check if pipeline name is correct and corresponding to a template in $emailtemplate) "
    exit_abnormal
fi

# Set new mail txt file (this is the one that will be modified and sent to the customer)
newmail="${data}/ctg-delivery-mail.$pid.txt"
# Set scp command for customer (this command will be  put in the emal)
scpcmd="scp -P 22022 -r $customer@lfs603.srv.lu.se:$lfstarget ."
# bash script for sending mail - to sync to lfs and execute via ssh
# Add CTG BNF user email to "cc" and "from" : so both customer and ctg bnf'er will get the email

# Set to Pers adress by default (ADD IF STATEMENTS FOR OTHER CTG USERS)
ctgmail="per.brattas@med.lu.se"
ctgName="CTG data delivery" # This goes as "Sender name" of the email (with the "ctgmail" as from adress)
if [ $ctguser == "percebe" ]; then
    ctgmail="david.lindgren@med.lu.se"
fi

## ATTACHMENTS
att=""
a=$(ls $nasup/$data/ctg-interop/*.html)
mult=$(basename $a)
file2="/srv/data/$customer/$data/ctg-interop/${mult}"
att="$att -a $file2"

# attach ctg-delivery guide
att="$att -a /srv/data/$ctguser/ctg-delivery-guide-v1.0.pdf"

# Command to execute for sending the email 
mailcmd="echo '' | mutt -s 'CTG $pipe delivery of $pid' $email -i /srv/data/$customer/$newmail -e 'unmy_hdr from; my_hdr From: ${ctgName} <${ctgmail}>' -e 'set content_type=text/html' -c ${ctgmail} -c ${cc} $att"
ctgmailcmd="echo '' | mutt -s 'CTG $pipe delivery of $pid' $ctgmail -i /srv/data/$customer/$newmail -e 'unmy_hdr from; my_hdr From: ${ctgName} <${ctgmail}>' -e 'set content_type=text/html' -c ${ctgmail} -c ${cc} $att"

echo ""
echo "> Mutt command:"
echo $mailcmd
# Create the script that will execute the email delivery (the script will be sent to lfs delivery folder, and executed via ssh below in this current script..)
mailscr="${data}/ctg-delivery.$pid.$pipe.sh"
echo $mailcmd > $mailscr
# if autodeliver OFF
ctgmailscr="${data}/ctg-delivery.ctgonly.$pid.$pipe.sh"
echo $ctgmailcmd > $ctgmailscr

# Adress of this email-sending script on lfs
lfsmailscr="/srv/data/$customer/$mailscr"
lfsmail="/srv/data/$customer/$newmail"
# Adress of this email-sending script on lfs (CTG ONLY (autodelier off))
ctglfsmailscr="/srv/data/$customer/$ctgmailscr"

# Remove '/' suffix from data folder
newdata=$(echo $data | sed 's/\/$//')
data=$newdata

cmd="rsync -av --progress $nasup/$data $ctguser@lfs603.srv.lu.se:/srv/data/$customer/"

echo ""
echo "> The following arguments are entered:"
echo " - CTG user          : $ctguser"
echo " - CTG Email         : $ctgmail" 
echo " - CC                : $cc"
echo " - Customer lfs-user : $customer"
echo " - Customer email    : $email"
echo " - Delivery data     : $data"
echo " - Project ID        : $pid"
echo " - CTG-Pipeline      : $pipe" 
echo " - Autodeliver       : $autodeliver"
echo "-- LFS info -- "
echo " - lfs dir  : $lfstarget"
echo " - mail scr : $lfsmailscr"
echo " - mail txt : $lfsmail"
echo ""
echo "> Current command will be executed: "
echo "> $cmd"
echo ""
echo ""

echo ".. Creating delivery email"
echo "> Using delivery email template: $emailtemplate"
# Modify the email to contain project ID and download command for customer
cp $emailtemplate $newmail
sed "s/xxprojidxx/${pid}/g" $newmail > tmp.txt; mv tmp.txt $newmail
sed "s|xxdownloadcommandxx|${scpcmd}|g" $newmail > tmp.txt; mv tmp.txt $newmail
sed "s|xxpasswordxx|${pswd}|g" $newmail > tmp.txt;  mv tmp.txt $newmail
rm -f tmp.txt
    
## Check if customer exist
sshcmd="$(cat <<-EOF
if [ -d /srv/data/${customer} ]; then
echo '1'
else
echo '2'
fi
EOF
)"
# If user does not exists (ssh command returns 2), create user 
userExist=$(ssh -t $ctguser@lfs603.srv.lu.se "$sshcmd")
if [ $userExist != "1" ]; then
    echo "-- > user '${customer}' does not exist.. creating user with password"
    
    createcmd="ssh $ctguser@lfs603.srv.lu.se sh /srv/data/create_customer_account.sh $customer <<EOF
$pswd
$pswd
EOF"
    
    #	    echo "$createcmd "
    echo "$createcmd " | bash -
    
    echo ".. changing permissions on customer folder"
    mod="ssh $ctguser@lfs603.srv.lu.se sudo chmod g+s /srv/data/$customer "
    echo "- $mod"
    $mod
    umod="ssh $ctguser@lfs603.srv.lu.se sudo usermod -a -G ${customer} $ctguser"
    echo "- $umod"
    $umod
    cmod="ssh $ctguser@lfs603.srv.lu.se sudo chmod 770 /srv/data/${customer}"
    echo "- $cmod"
    $cmod
fi

echo ".. Starting rsync .."; echo ""
echo "- $cmd"
$cmd | tee snc.$data.log 
echo ""
echo "> Changing permissions and ownership of delivery folder.."
mod="ssh $ctguser@lfs603.srv.lu.se sudo chmod 770 -R /srv/data/$customer"
own="ssh $ctguser@lfs603.srv.lu.se sudo chown -R ${customer}:$ctguser /srv/data/$customer"
echo "- $mod"
echo "- $own" 
echo ""
$mod
$own

echo "> Setting 'postconf -e message_size_limit=202400000' on lfs603"
postconfcmd="ssh $ctguser@lfs603.srv.lu.se sudo postconf -e message_size_limit=202400000"
echo "- $postconfcmd"
$postconfcmd

if [ "$autodeliver" == "y" ]; then
    echo ""
    echo "> Sending email to customers: $email"
    emailcmd="ssh $ctguser@lfs603.srv.lu.se bash $lfsmailscr"
    echo "- $emailcmd"
    $emailcmd
else
    echo ""
    echo "> Sending email to CTG only: $ctgmail and $cc"
    emailcmd="ssh $ctguser@lfs603.srv.lu.se bash $ctglfsmailscr"
    echo "- $emailcmd"
    $emailcmd
fi

# Delete ctg-delivery files from deliver folder
# Delete mail script
echo ""
echo "> Deleting mail info, script and html"
delcmd="ssh $ctguser@lfs603.srv.lu.se rm -r -f $lfsmailscr"
echo "- $delcmd"
$delcmd

# Delete delivery email
delcmd="ssh $ctguser@lfs603.srv.lu.se rm -r -f $lfstarget/ctg-delivery-mail.$pid.txt"
echo "- $delcmd"
$delcmd

# Delete ctg-delivery info
delcmd="ssh $ctguser@lfs603.srv.lu.se rm -r -f $lfstarget/ctg-delivery.info.csv"
echo "- $delcmd"
$delcmd

# Delete all temporary ctg. filese (ctg.*)
echo " Delete all temporary ctg. files ('ctg.*')"
delcmd="ssh $ctguser@lfs603.srv.lu.se rm -r -f $lfstarget/ctg.*"
echo "- $delcmd"
$delcmd

echo ""
echo "> Customer download command:"
echo $scpcmd

echo ""
echo "> rsync log file:" 
echo " - nas-sync/upload/snc.$data.log "
echo 
echo "Done"

touch $data/ctg.rawdata.done
